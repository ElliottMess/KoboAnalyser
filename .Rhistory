"Please run 'kobo_shiny()' with a valid example app as an argument.\n",
validAppsMsg,
call. = FALSE)
}
# find and launch the app
appDir <- system.file("shiny_examples/", app, package = "KoboAnalyser")
shiny::runApp(appDir, display.mode = "normal")
library(KoboAnalyser)
install_github("wlandau/appPackage")
installr::install.github("wlandau/appPackage")
source('code/0-packages.R')
help()
help("install_github")
??install_github
library(devtools)
install_github("wlandau/appPackage")
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
?shinyAppDir
?runApp
library(KoboAnalyser)
library(KoboAnalyser)
library (KoboAnalyser)
kobo_projectiniti()
source(“code/0-packages”)
kobo_projectinit()
library (KoboAnalyser)
kobo_projectinit()
source("code/0-packages")
library (KoboAnalyser)
kobo_projectinit()
source("code/0-packages")
library(shiny); runApp('~/ACTED Afghanistan/8. AME/1. Guidelines and tools/11. Kobo/KoboAnalyser/KoboAnalyser/inst/shiny_examples/app_projectconfig.R')
runApp('~/ACTED Afghanistan/8. AME/1. Guidelines and tools/11. Kobo/KoboAnalyser/KoboAnalyser/inst/shiny_examples/app_projectconfig.R')
library(KoboAnalyser)
library(KoboAnalyser)
runApp('~/ACTED Afghanistan/8. AME/1. Guidelines and tools/11. Kobo/KoboAnalyser/KoboAnalyser/inst/shiny_examples/app_projectconfig.R')
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
runApp('~/ACTED Afghanistan/8. AME/1. Guidelines and tools/11. Kobo/KoboAnalyser/KoboAnalyser/inst/shiny_examples/app_projectconfig.R')
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
data <- read_excel("data/data.xlsx", sheet="02CPW_endline_form")
library(KoboAnalyser)
mainDirroot
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
questionr:::iorder()
library(KoboAnalyser)
source("inst/script/0-packages.R")
?fortunes
??fortunes
?ggsave
asdf
---
output: word_document
---
```{r setup, include=FALSE, echo=FALSE, warning=FALSE, message=FALSE}
# Load project configuration parameters, data, dico, and form
mainDir <- getwd()
source(paste0(mainDir,"/code/0-config.R"), local=TRUE)
data <- read_excel(path.to.data, sheet=sheet)
```
---
title: `r report_name`
author: `r paste0(author,", ", organisation)`
date: `r paste0(location,", ", Sys.Date())`
output:
word_document:
fig_caption: yes
fig_height: 5
fig_width: 8
toc: yes
toc_depth: 2
---
***
***
# Executive summary and main findings
***
# Background Introduction
# Plotting Select_one questions
```{r bar_one, echo=FALSE, warning=FALSE, cache=FALSE, fig.width=7, fig.height=2}
#########################################################################################
## Produce graphs of all select_one questions
kobo_bar_one_print(data,dico)
```
# Plotting Select_multiple questions
```{r bar_multi, echo=FALSE, warning=FALSE, cache=FALSE, fig.width=7, fig.height=2}
#########################################################################################
## Produce graphs of all select_multiple questions
kobo_bar_multi_print(data,dico)
```
# Plotting numeric questions
```{r histogram, echo=FALSE, warning=FALSE, cache=FALSE, fig.width=7, fig.height=6}
#########################################################################################
## Produce histogramme for all numeric variable
#kobo_histo_print(data,dico)
```
# Plotting facetted analysis
```{r facet, echo=FALSE, warning=FALSE, cache=FALSE, fig.width=7, fig.height=8}
########################################################################################
### Produce faceted chart select_one
kobo_bar_one_facet_print(data,dico)
```
'''
```
```
library(KoboAnalyser)
library(KoboAnalyser)
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
?uninstall
remove.packages("devtools", lib="~/R/win-library/3.4")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages(c("BH", "bindr", "bindrcpp", "curl", "DBI", "doBy", "forcats", "gdtools", "hms", "httpuv", "igraph", "knitr", "lubridate", "mapproj", "MASS", "officer", "openssl", "pillar", "plogr", "profvis", "Rcpp", "rgdal", "rlang", "rmarkdown", "Rttf2pt1", "rvg", "selectr", "sf", "stringdist", "stringi", "stringr", "survey", "tidyselect", "viridis", "withr", "XML", "yaml"))
install.packages(c("MASS", "mgcv", "nlme", "rpart"), lib="C:/Program Files/R/R-3.4.3/library")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("ElliottMess/KoboAnalyser")
library(KoboAnalyser)
kobo_shiny("app_koboanalyser.R")
install_github("ElliottMess/KoboAnalyser")
install_github("ElliottMess/KoboAnalyser")
library(KoboAnalyser)
kobo_shiny()
kobo_shiny(app_projectconfig.R)
kobo_shiny("app_projectconfig.R")
library(koboanalyser)
library(KoboAnalyser)
kobo_shiny("app_projectconfig.R")
install.packages("testthat")
library(KoboAnalyser)
library(KoboAnalyser)
optim()
testthat::auto_test_package("KoboAnalyser")
testthat::auto_test_package("'C:\Users\Elliott\Documents\ACTED Afghanistan\8. AME\1. Guidelines and tools\11. Kobo\KoboAnalyser\KoboAnalyser")
testthat::auto_test_package(getwd())
getwd()
package.skeleton()
package.skeleton()
install.packages("rclean")
Rclean
install.packages("Rclean")
getwd()
setwd("/R")
setwd("R")
getwd()
data(prov_json)
library(Rclean)
devtools::use_travis()
devtools::use_travis()
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
source("code/0-packages.R")
source("inst/script/0-packages.R")
use_readme_rmd()
use_readme_md()
use_readme_md()
use_readme_md()
use_readme_md()
---
output: html_document:
toc: TRUE
---
# Introduction
KoboAnalyser is a R package to conduct data discovery and analysis for data collected through  KoboToolbox.
The package is largely based on KoboloadeR (https://github.com/Edouard-Legoupil/koboloadeR) by Edouard Legoupil
# KoboAnalyser quick setup
## Prerequisite
To be able to use KoboAnalyser you will need:
* R: download here: https://cran.rstudio.com/). For Windows, choose "install R for the first time".
* R: download here: https://cran.rstudio.com/). For Windows, choose “install R for the first time”.
* R Studio  (https://www.rstudio.com/products/rstudio/download/#download)
## Installation
* Install R: follow instruction from the installer.
* Install R Studio: follow instruction from the installer
* Launch R Studio
### Install KoboAnalyser from Github (up to date version):
* In the R console, install 'devtool' package:
```
install.packages("devtools")
```
* Install KoboAnalyser:
```
library(devtools)
install_github("ElliottMess/KoboAnalyser")
```
* You are all set! You can know use KoboAnalyser
### Install KoboAnalyser from Zip package:
* In Tools (top of R Studio): click Install Packages
* Choose Install from: Package Archive File (.zip; .tar.gz)
* In Package archive, select the file KoboAnalyser.tar.gz that you downloaded/received
* You are all set! You can know use KoboAnalyser
## Quick start
First, create a project in R Studio:
* In R Studio, select File, click New project. A box opens
* Choose New Directory
* Choose Empty project
* Type the name of the folder where you want to put your data
* Select where you want to put this folder
* Click Create project
Then setup a few things: run those two lines:
```
library (KoboAnalyser) # This loads KoboAnalyser package
kobo_projectinit() # Creats folders necessary and transfer files needed
```
It might take a while as a few other packages have to be installed or loaded. Once the see the " >" again at the beginning of the line, you can run:
```
kobo_shiny("app_koboanalyser.R")
use_readme_rmd()
use_news_md()
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
View(C:/Users/Elliott/Documents/ACTED Afghanistan/8. AME/1. Guidelines and tools/11. Kobo/KoboAnalyser/KoboAnalyser.Rcheck/00check.log)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
?KoboAnalyser
??KoboAnalyser
?kobo_analysis_plan
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
?read_excel
library(KoboAnalyser)
library(KoboAnalyser)
pop_size =1
margin= 0.05
confidence = 0.95
library(survey)
?survey
power.t.test( power = 0.95,              # Power
delta = 1.6,               # mu1 - mu2
sd = 2.14,                 # Standard Deviation
sig.level = 0.02,          # Significance level
type = "two.sample",       # Type of study
alternative = "two.sided"  # Type of test
)
sample_size <- power.t.test(d=0.5, sig.level=.05, power = .95, type = 'two.sample')
sample_size
pop_size
?qnorm
margin
qnorm(confidence)
confidence
?qnorm
qnorm(confidence,mean=0.5)
Za=1.96
qnorm(confidence,mean=0.5,sd=2)
qnorm(confidence,mean=0.5,sd=0.5)
qnorm(confidence,sd=0.5)
qnorm(confidence,mean=0.5,sd=1)
?power.prop.test
power.prop.test(n=pop_size,p1=0.5,sig.level = margin, power=confidence)
power.prop.test(n=pop_size,sig.level = margin, power=confidence)
power.prop.test(n=pop_size, p1=0.5, sig.level = margin, power=confidence)
power.prop.test(n=pop_size, p1=0.5, p2=0.5, sig.level = margin, power=confidence)
power.prop.test(p1 = .50, p2 = .75, power = .90) ## =>     n = 76.7
?power
x
X
X= qnorm(confidence)
X
X= qnorm(confidence)^2
X
X= qnorm(confidence)^2*0.5*(1-p)/margin^2
X= qnorm(confidence)^2*0.5*(1-0.5)/margin^2
X
n= pop_size*X/(X+pop_size-1)
n
for (i in 1:10000000){
sample_size <- i*X/(X+i-1)
}
sample_size
X= qnorm(confidence)*0.5*(1-0.5)/margin^2
for (i in 1:10000000){
sample_size <- i*X/(X+i-1)
}
sample_size
X= qnorm(confidence)
186*2
sample_size*2
sample_size <- pop_size/(1+4*(margin/qnorm(confidence)/2)^2)*(pop_size)
sample_size
for (i in 1:10000000){
sample_size <- pop_size/(1+4*(margin/qnorm(confidence)/2)^2)*(pop_size)
}
for (i in 1:10000000){
sample_size <- i/(1+4*(margin/qnorm(confidence)/2)^2)*(i)
}
sample_size
i
sample_size <- i/(1+4*(margin/qnorm(confidence)/2)^2)*(i-1)
sample_size
i
i=1
sample_size
sample_size <- i/(1+4*(margin/qnorm(confidence)/2)^2)*(i-1)
sample_size
sample_size <- i/(1+4*(margin/(qnorm(1-(1-(confidence)/2))^2)*(i-1)
)
)
sample_size
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2)^2)*(i-1)
)
sample_size
for (i in 1:10000000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2)^2)*(i-1)
}
for (i in 1:10000000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2)^2)*(i-1))
}
sample_size
qnorm(confidence)
qnorm(1-(1-confidence)/2)
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2)^2)*(i-1))
i
sample_size
(margin/qnorm(1-(1-confidence)/2)^2)
(margin/qnorm(1-(1-confidence/2)^2)
)
(margin/qnorm(1-(1-confidence)/2))^2
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
sample_size
i
i=1000
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
sample_size
c=0
for (i in 1:10000000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c <-rbind(sample_size)
}
View(c)
c <- data.frame()
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i]<-sample_size)
}
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i]<-sample_size
}
c[1] <- sample_size
sample_size
c <- data.frame()
c <- data.frame(1)
c[1] <- sample_size
c
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i]<-sample_size
}
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i,]<-sample_size
}
c <- data.frame()
c <- data.frame(2)
c <- data.frame(2,2)
names(x) <- c("population","sample_size")
names(c) <- c("population","sample_size")
c[1,] <-NA
c
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i,"sample_size"]<-sample_size
}
for (i in 1:100000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i,"sample_size"]<-sample_size
c[i,"population"] <- i}
View(c)
for (i in 1:1000000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i,"sample_size"]<-sample_size
c[i,"population"] <- i}
i
ggplot(data=c, aes(x=population, y=sample_size)) +
geom_histogram(aes(y =..density..), fill="#2a87c8", alpha = .6, binwidth=0.5) +
geom_density(adjust=2) +
scale_x_continuous(expand = c(0,0)) +
ggtitle(wrapper(title,width=50))+
labs(x="", y="Frequency")+
theme(plot.title=element_text(face="bold", size=20),
plot.background = element_rect(fill = "transparent",colour = NA))
library(ggplot2)
ggplot(data=c, aes(x=population, y=sample_size)) +
geom_histogram(aes(y =..density..), fill="#2a87c8", alpha = .6, binwidth=0.5) +
geom_density(adjust=2) +
scale_x_continuous(expand = c(0,0)) +
ggtitle(wrapper(title,width=50))+
labs(x="", y="Frequency")+
theme(plot.title=element_text(face="bold", size=20),
plot.background = element_rect(fill = "transparent",colour = NA))
ggplot(data=c, aes(x=population, y=sample_size)) +
geom_histogram(aes(y =..density..), fill="#2a87c8", alpha = .6, binwidth=0.5) +
geom_density(adjust=2) +
scale_x_continuous(expand = c(0,0)) +
labs(x="", y="Frequency")+
theme(plot.title=element_text(face="bold", size=20),
plot.background = element_rect(fill = "transparent",colour = NA))
geom_histogram(c, aes(c))
geom_histogram(c, aes(c$sample_size))
plot(c$population,c$sample_size)
for (i in 1:1000000){
sample_size <- i/(1+4*(margin/qnorm(1-(1-confidence)/2))^2*(i-1))
c[i,"sample_size"]<-sample_size
c[i,"population"] <- i}
plot(c$population,c$sample_size)
shiny::runApp('C:/Users/Elliott/Desktop')
rsconnect::deployApp('inst/shiny_app/app_koboanalyser.R')
rsconnect::deployApp('inst/shiny_app/')
rsconnect::deployApp('inst/shiny_app')
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
getwd()
datatable <- read.table(file.choose())
View(datatable)
plot(datatable)
dS/dt=kS
dS/dt = kS
?str
x <- 0:10; y <- c(26, 17, 13, 12, 20, 5, 9, 8, 5, 4, 8)
ll <- function(ymax = 15, xh = 6)
-sum(dpois(y, lambda=ymax/(1+x/xh), log=TRUE))
fit <- mle(ll)
str(fit)
str(datatable[3,2])
install.packages(xts)
install.packages("xts")
library(xts)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(shiny); runApp('inst/shiny_app/app_koboanalyser.R')
runApp('inst/shiny_app/app_koboanalyser.R')
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(readr)
Book1 <- read_csv("~/Book1.csv")
View(Book1)
summary(Book1)
plot(Book1)
as<- table(Book1)
as
View(as)
plot(as)
questions <-  as.character(dico[dico$formpart=="questions" & !dico$fullname %in% c("__version__","start","end","today","deviceid") & dico$type %in%  c("select_one","select_multiple_d","integer","decimal","calculate") ,c("fullname"),])
questions <- as.data.frame(questions, stringsAsFactors = FALSE)
corr_matrix <- matrix(nrow = nrow(questions), ncol = nrow(questions))
library(KoboAnalyser)
library(KoboAnalyser)
View(data.single)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
df = data.frame(colA=c(1, 2, 3, 4, NA), colB=c('a', NA, 'c', 'd', 'e'))
View(df)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
library(KoboAnalyser)
